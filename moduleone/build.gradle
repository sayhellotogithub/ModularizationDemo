if (rootProject.ext.isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
def cfg = rootProject.ext.android
def appId = rootProject.ext.appId
android {
    compileSdkVersion cfg.compileSdkVersion
    defaultConfig {
        if (!rootProject.ext.isModule) {
            applicationId appId["moduleone"]
        }
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.tartgetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        //这里配制的变量，可以在代码中使用
        buildConfigField("boolean","isModule",String.valueOf(rootProject.ext.isModule));


        sourceSets{
            main{
                if(rootProject.ext.isModule){
                  manifest.srcFile "src/main/AndroidManifest.xml"
                }else{
                    manifest.srcFile "src/main/module/AndroidManifest.xml"
                    java.srcDirs "src/main/module/java","src/main/java"
                }
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    annotationProcessor project (":route-compile")

    implementation project (":base")
}
